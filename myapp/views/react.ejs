<!DOCTYPE html>
<html>
<head>
	<title>React</title>
	<script src="https://unpkg.com/react@15/dist/react.min.js"></script>
	<script src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.js"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
</head>
<body>
<style type="text/css">
	#example {
		padding: 20px;
		width: 40%;
		background-color: #66ccff;
		margin: 50px;
	}
	button {
		margin: 10px;
		width: auto;
	}

	.example {
		background-color: white;
		padding: 15px;
		margin-bottom: 20px;
	}

</style>

	<div id = "example"></div>

	<script type="text/babel">

	var Bacon = React.createClass({

					getInitialState: function() {
							return {editing: false}
					},

					edit: function(){
						this.setState({editing: true}) 
					},

					save: function() {
						this.props.updateCommentText(this.refs.newText.value, this.props.index);
						this.setState({editing: false});
					},

					remove: function() {
						this.props.removeCommentText(this.props.index)
					},

					renderForm: function() {
						return (
							<div className = "example">
							<textarea ref = "newText">{this.props.children}</textarea>
								<button onClick = {this.save} className = "btn btn-primary">Save</button>
							</div>
						)
					},

					renderNormal: function() {
						return (
							<div className = "example">
								<h3>{this.props.children}</h3>
								<button onClick = {this.edit} className = "btn btn-primary">Edit</button>
								<button onClick = {this.remove} className = "btn btn-danger">Remove</button>
							</div>
						)
					},

					render: function(){
							
						if(this.state.editing == true) {
							return this.renderForm();
						} else {
							return this.renderNormal();
						}
						}

				});

	var Board = React.createClass({
			getInitialState : function(){
					return {comment: [
						'I am hungry',
						'Still Hungry',
						'fuck you all'
					]}
			},

			addNew: function(text) {
					var arr = this.state.comment;
					arr.push(text);
					this.setState({comment: arr})
			},

			removeComment: function(i) {
				var arr = this.state.comment;
				arr.splice(i, 1);
				this.setState({comment: arr})
			},

			updateComment: function(newText, i){
				var arr = this.state.comment;
				arr[i] = newText;
				this.setState({comment: arr})
			},

			eachComment: function(text, i){
				return (<div>
				<button onClick = {this.addNew.bind(null, "Default Comment")}>Add New</button>
							<Bacon key = {i} index = {i} removeCommentText = {this.removeComment} updateCommentText = {this.updateComment}>
							{text}
							</Bacon>
						</div>
						)
			},

			render : function(){
				return (
					<div className = "comments">
						{
							this.state.comment.map(this.eachComment)
						}
					</div>
				)
			}
	})

		ReactDOM.render(<Board />, document.getElementById('example'));
	</script>
</body>
</html>